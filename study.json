[
  {
    "term": "Binary Coded Decimal (BCD)",
    "definition": "Binary representation where each positive denary digit is represented by a sequence of 4 bits (nibble).",
    "details": "Only digits 0-9 are converted to BCD because digits greater than 9 are not valid in BCD. If a nibble is greater than 9, add 6 (0110) to correct the BCD representation.",
    "example": "To represent 429 in BCD: 4 = 0100, 2 = 0010, 9 = 1001, concatenated as 0100 0010 1001.",
    "applications": "Used in electronic devices displaying numbers (e.g., calculators, digital clocks), accurately measuring decimal fractions, coding denary numbers electronically, and storing date/time in BIOS where conversion with denary is easier.",
    "benefits": "More straightforward to convert between BCD and denary; less complex to encode and decode for programmers; easier for digital equipment to display information; can represent monetary values exactly.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What does BCD stand for?", "a": "Binary Coded Decimal"},
      {"q": "In BCD, how many bits are used to represent one denary digit?", "a": "4 bits"},
      {"q": "What is another name for a sequence of 4 bits?", "a": "nibble"},
      {"q": "What is the BCD representation of the denary number 429 (use spaces)?", "a": "0100 0010 1001"},
      {"q": "What is one application of BCD?", "a": "digital clocks"}
    ]
  },
  {
    "term": "Two's Complement",
    "definition": "A method to represent signed integers in binary by using the most significant bit (MSB) as a sign bit.",
    "conversion": "To convert a negative number (e.g., -42) to 8-bit two's complement: convert 42 to binary (00101010), flip all bits (11010101), add 1 (11010110).",
    "reverseConversion": "To convert two's complement binary back to denary: if MSB is 1, flip bits and add 1 to get magnitude, then apply negative sign.",
    "range": "In 8 bits, maximum positive number is 127; maximum negative number is -128.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What method is used to represent signed integers in binary?", "a": "Two's Complement"},
      {"q": "What does the Most Significant Bit (MSB) represent in two's complement?", "a": "The sign bit"},
      {"q": "What is the 8-bit two's complement representation of -42?", "a": "11010110"},
      {"q": "What is the maximum positive number in 8-bit two's complement?", "a": "127"},
      {"q": "What is the maximum negative number in 8-bit two's complement?", "a": "-128"}
    ]
  },
  {
    "term": "Hexadecimal System (Base 16)",
    "definition": "Number system with digits 0-9 and letters A-F representing values 10-15.",
    "applications": "Used in MAC addresses, HTML colour codes, assembly language, machine code, and debugging memory dumps.",
    "examples": "A5 in denary = (10×16) + 5 = 165; 65 in hex = 41 (4×16 + 1).",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What base is the Hexadecimal system?", "a": "Base 16"},
      {"q": "In Hex, what denary value does the letter A represent?", "a": "10"},
      {"q": "In Hex, what denary value does the letter F represent?", "a": "15"},
      {"q": "What is one application of hexadecimal numbers?", "a": "HTML colour codes"}
    ]
  },
  {
    "term": "Character Sets",
    "definition": "Collections of characters (letters, digits, punctuation, symbols) represented by unique binary codes via character encoding.",
    "standards": "ASCII (7-bit, 128 characters, English alphabet), Extended ASCII (8-bit, 256 characters, includes European alphabets), Unicode (16-bit or 32-bit, supports multiple languages and a wide range of characters).",
    "tradeoff": "ASCII uses less storage but supports fewer characters; Unicode supports many languages but uses more storage.",
    "similarities": "All can use 8 bits; ASCII is a subset of Unicode and Extended ASCII.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What is a collection of characters represented by unique binary codes called?", "a": "Character Set"},
      {"q": "How many bits does standard ASCII use?", "a": "7-bit"},
      {"q": "How many bits does Extended ASCII use?", "a": "8-bit"},
      {"q": "What character set supports multiple languages and uses 16 or 32 bits?", "a": "Unicode"}
    ]
  },
  {
    "term": "ASCII Code",
    "definition": "Character encoding standard for electronic communication in English, using 7 or 8 bits.",
    "details": "ASCII stands for American Standard Code for Information Interchange. Each character has a unique code stored in the same order as the text.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What does ASCII stand for?", "a": "American Standard Code for Information Interchange"},
      {"q": "How many bits does ASCII typically use?", "a": "7 or 8 bits"}
    ]
  },
  {
    "term": "Unicode",
    "definition": "Character encoding standard supporting a wide range of characters and symbols from multiple languages, typically 16 or 32 bits long.",
    "details": "Unicode provides a unique code point for every character regardless of platform, program, or language.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What character set supports characters from multiple languages?", "a": "Unicode"},
      {"q": "How many bits does Unicode typically use?", "a": "16 or 32 bits"}
    ]
  },
  {
    "term": "Bitmap Graphics",
    "definition": "Images made up of pixels, each assigned a single colour represented by a unique binary value.",
    "encoding": "Stored as a sequence of binary numbers representing each pixel's colour.",
    "properties": "Prone to pixelation when enlarged; larger file size due to storing data for each pixel; can be compressed significantly; editing is more difficult as each pixel must be edited separately.",
    "fileHeader": "Contains metadata such as file type, compression type, dimensions (width × height), colour depth, image resolution, and file size.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What are images made up of pixels called?", "a": "Bitmap Graphics"},
      {"q": "What is the term for when a bitmap image is enlarged and becomes blocky?", "a": "Pixelation"},
      {"q": "What part of a bitmap file contains metadata like dimensions and colour depth?", "a": "File Header"}
    ]
  },
  {
    "term": "Pixel",
    "definition": "The smallest addressable element in an image or display.",
    "details": "Each pixel represents a single point in the image and has a colour value stored in binary.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the smallest addressable element in an image?", "a": "Pixel"}
    ]
  },
  {
    "term": "Image Resolution",
    "definition": "Total number of pixels in an image.",
    "formula": "Number of pixels = width × height",
    "example": "An image with 4096 × 3192 pixels.",
    "effect": "Higher resolution results in sharper, more detailed images with less pixelation.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the total number of pixels in an image called?", "a": "Image Resolution"},
      {"q": "What is the formula for Image Resolution?", "a": "width × height"}
    ]
  },
  {
    "term": "Screen Resolution",
    "definition": "Number of pixels viewable horizontally and vertically on a device's screen.",
    "formula": "Number of pixels = width × height",
    "example": "1680 × 1080 pixels.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the number of pixels viewable on a device's screen called?", "a": "Screen Resolution"}
    ]
  },
  {
    "term": "Colour Depth (Bit Depth)",
    "definition": "Number of bits used to represent the colour of a single pixel.",
    "formula": "An image with n bits per pixel can represent 2^n colours.",
    "example": "A 16-colour bitmap uses 4 bits per pixel because 2^4 = 16.",
    "effect": "Increasing colour depth increases the range of colours and image quality but also increases file size.",
    "fileSize": "File size = Number of pixels × Colour depth (bits) / 8 (to convert bits to bytes).",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the number of bits used to represent the colour of a single pixel?", "a": "Colour Depth"},
      {"q": "An image with a colour depth of 'n' bits can represent how many colours?", "a": "2^n"},
      {"q": "How many bits per pixel are needed for a 16-colour bitmap?", "a": "4 bits"}
    ]
  },
  {
    "term": "Vector Graphics",
    "definition": "Images composed of mathematically defined drawing objects such as lines, shapes, and curves.",
    "encoding": "Stored as a list of drawing commands and properties (drawing list) that define how to draw each object.",
    "properties": "Drawing objects have properties defining aspects of appearance (e.g., colour, line thickness).",
    "scalability": "Can be resized or scaled without loss of quality or pixelation.",
    "fileSize": "Typically smaller file size as only instructions are stored, but do not compress well due to little redundant data.",
    "applications": "Used for logos, fonts, and graphics requiring frequent resizing or editing.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What type of graphic is composed of mathematically defined objects?", "a": "Vector Graphics"},
      {"q": "Can vector graphics be scaled without losing quality?", "a": "Yes"},
      {"q": "What is a common application for vector graphics?", "a": "Logos"}
    ]
  },
  {
    "term": "Drawing Object (Vector Graphic)",
    "definition": "A component of a vector graphic created using a formula or command.",
    "details": "Examples include rectangles, circles, lines, and curves defined by coordinates and properties.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is a component of a vector graphic, such as a line or circle, called?", "a": "Drawing Object"}
    ]
  },
  {
    "term": "Drawing Property (Vector Graphic)",
    "definition": "Data about the shape defining aspects of its appearance such as colour, line thickness, or font size.",
    "example": "A circle may have properties like radius, fill colour, border colour, and border thickness.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What defines the appearance (e.g., colour, line thickness) of a vector drawing object?", "a": "Drawing Property"}
    ]
  },
  {
    "term": "Drawing List (Vector Graphic)",
    "definition": "The list of all drawing objects and commands required to recreate the image.",
    "example": "Square : line colour : black : fill colour : white : x1 : 10 : y1 : 10 : x2 : 50 : y2 : 50",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the list of commands used to recreate a vector image called?", "a": "Drawing List"}
    ]
  },
  {
    "term": "Sound Representation",
    "definition": "Sound is vibration through a medium and is inherently analogue; to store digitally, amplitude is sampled at regular intervals and each sample is encoded as a binary number.",
    "analogueVsDigital": "Analogue data is continuous and variable; digital data is discrete and quantised.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "Is sound inherently analogue or digital?", "a": "Analogue"},
      {"q": "How is analogue sound stored digitally?", "a": "Amplitude is sampled at regular intervals"}
    ]
  },
  {
    "term": "Sampling",
    "definition": "Taking measurements of the amplitude of an analogue sound wave at regular intervals and storing these values.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the process of measuring an analogue sound wave's amplitude at regular intervals?", "a": "Sampling"}
    ]
  },
  {
    "term": "Sampling Rate",
    "definition": "Number of samples taken per second, measured in Hertz (Hz).",
    "effect": "Higher sampling rate reduces gaps between samples, reduces quantisation errors, improves accuracy of digital waveform resembling the analogue wave, but increases file size.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the number of sound samples taken per second called?", "a": "Sampling Rate"},
      {"q": "What unit is Sampling Rate measured in?", "a": "Hertz (Hz)"},
      {"q": "Does a higher sampling rate increase or decrease file size?", "a": "Increase"}
    ]
  },
  {
    "term": "Sampling Resolution (Bit Depth)",
    "definition": "Number of bits used to store each sample of sound.",
    "effect": "Higher sampling resolution allows a wider range of amplitudes to be represented, improves accuracy, reduces quantisation errors, but increases file size.",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the number of bits used to store each sound sample called?", "a": "Sampling Resolution"},
      {"q": "Does higher sampling resolution improve or degrade sound accuracy?", "a": "Improve"},
      {"q": "Does a higher sampling resolution increase or decrease file size?", "a": "Increase"}
    ]
  },
  {
    "term": "Bit Rate (Sound)",
    "definition": "Number of bits used to store one second of sound.",
    "formula": "Bit Rate = Sampling Rate × Sampling Resolution",
    "tags": ["Multimedia"],
    "questions": [
      {"q": "What is the number of bits used to store one second of sound?", "a": "Bit Rate"},
      {"q": "What is the formula for the Bit Rate of sound?", "a": "Sampling Rate × Sampling Resolution"}
    ]
  },
  {
    "term": "Compression",
    "definition": "Process of reducing file size to save storage space and reduce transmission time.",
    "benefits": "Reduces file size, faster download/upload, less bandwidth usage, allows sending large files via email or web.",
    "tags": ["Files"],
    "questions": [
      {"q": "What is the process of reducing a file's size called?", "a": "Compression"}
    ]
  },
  {
    "term": "Lossy Compression",
    "definition": "Compression method that irreversibly removes some data, resulting in loss of quality.",
    "effect": "File size is significantly reduced (often to about 10% of original), but original data cannot be fully restored.",
    "applications": "Used when some quality loss is acceptable, e.g., images (JPEG), sound files (MP3), videos.",
    "tags": ["Files"],
    "questions": [
      {"q": "What type of compression irreversibly removes data and loses quality?", "a": "Lossy Compression"},
      {"q": "Can the original data be fully restored after lossy compression?", "a": "No"},
      {"q": "What is a common file format that uses lossy compression?", "a": "JPEG"}
    ]
  },
  {
    "term": "Lossless Compression",
    "definition": "Compression method that preserves all original data, allowing perfect reconstruction.",
    "applications": "Used when all data is needed, e.g., text files, database records, high-quality images (PNG), bitmap and vector graphics.",
    "methods": "Includes Run-Length Encoding (RLE) which encodes sequences of identical elements as a single value and count.",
    "tags": ["Files"],
    "questions": [
      {"q": "What type of compression preserves all original data?", "a": "Lossless Compression"},
      {"q": "Is data quality lost during lossless compression?", "a": "No"},
      {"q": "What is a common file format that uses lossless compression?", "a": "PNG"}
    ]
  },
  {
    "term": "Run-Length Encoding (RLE)",
    "definition": "A lossless compression technique that replaces consecutive repeated characters or pixels with a single value and a count.",
    "example": "The sequence AAAABBBCCDAA is encoded as 4A 3B 2C 1D 2A.",
    "limitations": "Ineffective if data has few repeated sequences; can increase file size if many single occurrences.",
    "tags": ["Files"],
    "questions": [
      {"q": "What does RLE stand for?", "a": "Run-Length Encoding"},
      {"q": "Is RLE a lossy or lossless compression technique?", "a": "Lossless"},
      {"q": "How would RLE encode the sequence 'AAAAA'?", "a": "5A"}
    ]
  },
  {
    "term": "File Header",
    "definition": "Metadata at the beginning of a file describing its format and content.",
    "details": "Includes file type, compression type, image dimensions, colour depth, resolution, and file size.",
    "tags": ["Files"],
    "questions": [
      {"q": "What is the metadata at the beginning of a file called?", "a": "File Header"},
      {"q": "What is one piece of information stored in a file header?", "a": "File type"}
    ]
  },
  {
    "term": "File Size Calculation (Images)",
    "definition": "Calculates the file size of an image based on its dimensions and colour depth.",
    "formula": "File size (bytes) = Width × Height × Colour Depth (bits) / 8",
    "tags": ["Files"],
    "questions": [
      {"q": "What is the formula for image file size in bytes?", "a": "Width × Height × Colour Depth (bits) / 8"}
    ]
  },
  {
    "term": "File Size Calculation (Sound)",
    "definition": "Calculates the file size of a sound file based on duration, sample rate, bit depth, and number of channels.",
    "formula": "File size (bytes) = Duration (seconds) × Sample Rate (Hz) × Bit Depth (bits) × Number of Channels / 8 (Bytes)",
    "tags": ["Files"],
    "questions": [
      {"q": "What is the formula for sound file size in bytes (mono)?", "a": "Duration (seconds) × Sample Rate (Hz) × Bit Depth (bits) / 8"}
    ]
  },
  {
    "term": "Logical Shift",
    "definition": "Shifts all bits in a binary number left or right, filling vacated bits with zeros.",
    "details": "Does not preserve the sign bit; suitable for unsigned binary numbers.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What type of shift fills vacated bits with zeros?", "a": "Logical Shift"},
      {"q": "Is a logical shift suitable for signed or unsigned numbers?", "a": "Unsigned binary numbers"}
    ]
  },
  {
    "term": "Arithmetic Shift",
    "definition": "Shifts all bits in a binary number left or right, preserving the sign bit (MSB).",
    "details": "Used with signed binary numbers in two's complement representation to maintain sign.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "What type of shift preserves the sign bit (MSB)?", "a": "Arithmetic Shift"},
      {"q": "Is an arithmetic shift suitable for signed or unsigned numbers?", "a": "Signed binary numbers"}
    ]
  },
  {
    "term": "BCD Conversion",
    "definition": "Converts denary numbers to Binary-Coded Decimal by converting each digit separately to its 4-bit binary equivalent.",
    "example": "Decimal 45 is represented in BCD as 0100 0101. The plus 6 rule is applied if a nibble exceeds 1001 (9 in decimal) and the carry is counted in the next higher nibble.",
    "tags": ["Information Representation"],
    "questions": [
      {"q": "In BCD conversion, how is each denary digit converted?", "a": "Separately to its 4-bit binary equivalent"},
      {"q": "What is the BCD representation of 45 (use spaces)?", "a": "0100 0101"}
    ]
  },
  {
    "term": "Sample Rate",
    "definition": "The number of samples of audio carried per second, measured in Hz.",
    "example": "A sample rate of 44.1 kHz means 44,100 samples are taken per second.",
    "tags": ["Files"],
    "questions": [
      {"q": "What is the number of audio samples carried per second?", "a": "Sample Rate"},
      {"q": "A sample rate of 44.1 kHz means how many samples per second?", "a": "44,100"}
    ]
  },
  {
    "term": "Unit conversions (File Size)",
    "definition": "Converts file sizes between different units (e.g., bytes, kilobytes, megabytes).",
    "details": " 1Bit x 4 = 1Nibble, 1Bit x 8 = 1Byte(B), 1B x 1000 = 1KB(Kilobyte), 1KB x 1000 = 1MB(Megabyte), 1MB x 1000 = 1GB(Gigabyte), 1GB x 1000 = 1TB(Terabyte). ALSO 1B x 1024 = 1KiB(Kibibyte), 1KiB x 1024 = 1MiB(Mebibyte), 1MiB x 1024 = 1GiB(Gibibyte), 1GiB x 1024 = 1TiB(Trebibyte).",
    "example": "1 MB = 1000 KB = 1,000,000 bytes.",
    "tags": ["Files"],
    "questions": [
      {"q": "How many bits are in 1 Byte?", "a": "8"},
      {"q": "How many bits are in 1 Nibble?", "a": "4"},
      {"q": "How many Kilobytes (KB) are in 1 Megabyte (MB)?", "a": "1000"},
      {"q": "How many Kibibytes (KiB) are in 1 Mebibyte (MiB)?", "a": "1024"}
    ]
  },
  {
    "term": "Lossy Bitmaps",
    "definition": "Reduces File size by removing data that is less likely to be noticed by the human eye",
    "details": "For instance Similar pixels in color variation or subtle color variation",
    "tags": ["Files"],
    "questions": [
      {"q": "How do lossy bitmaps reduce file size?", "a": "By removing data that is less likely to be noticed"}
    ]
  },
  {
    "term": "PC",
    "definition": "Program Counter, Also known as Sequence Control Register, Stores address of next instruction to be read from",
    "details": "FDE Cycle starts Here!",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does PC stand for in a processor?", "a": "Program Counter"},
      {"q": "What is another name for the Program Counter?", "a": "Sequence Control Register"},
      {"q": "What address does the PC store?", "a": "Address of next instruction"}
    ]
  },
  {
    "term": "MAR",
    "definition": "Memory Address Register, Holds the address of the memory location to be accessed.",
    "details": "Also stores address of the IO device to be communicated with",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does MAR stand for?", "a": "Memory Address Register"},
      {"q": "What kind of information does the MAR hold?", "a": "Address of the memory location to be accessed"}
    ]
  },
  {
    "term": "MDR",
    "definition": "Memory Data Register, Also called the Memory Buffer Register, Stores the data that has to be written to the address in MAR.",
    "details": "Stores Data read from the address in MAR",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does MDR stand for?", "a": "Memory Data Register"},
      {"q": "What is another name for the MDR?", "a": "Memory Buffer Register"},
      {"q": "What data does the MDR temporarily store?", "a": "Data read from or to be written to memory"}
    ]
  },
  {
    "term": "CIR",
    "definition": "Current Instruction Register, Holds the instruction currently being executed.",
    "details": "Part of the FDE cycle, it works closely with the PC and MAR.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does CIR stand for?", "a": "Current Instruction Register"},
      {"q": "What does the CIR hold?", "a": "The instruction currently being executed"}
    ]
  },
  {
    "term": "Status Register",
    "definition": "It contains Bits which can be referred individually and set or cleared based on the results of operations. Used by the ALU for decsion makig",
    "details": "For instance Flags,overflow,carry,zero,negative",
    "tags": ["Processor"],
    "questions": [
      {"q": "What register contains bits (flags) that are set or cleared based on operation results?", "a": "Status Register"},
      {"q": "What part of the CPU uses the Status Register for decision making?", "a": "ALU"},
      {"q": "Give an example of a flag in the Status Register.", "a": "overflow"}
    ]
  },
  {
    "term": "IX",
    "definition": "Index Register, used in Index addressing, stores a number that's added to the operand to form the new address of data.",
    "details": "Facilitates indexed addressing modes.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does IX stand for?", "a": "Index Register"},
      {"q": "What addressing mode is the Index Register (IX) used for?", "a": "Index addressing"}
    ]
  },
  {
    "term": "Busses",
    "definition": "A system of pathways used for communication between different components of a computer.",
    "details": "Busses can be parallel or serial, and are used to transfer data, addresses, and control signals.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What is the general term for the pathways used for communication between computer components?", "a": "Busses"}
    ]
  },
  {
    "term": "Data Bus",
    "definition": "Bi directional(Two way), Used to carry instructions, data, addresses, Bus width is important and shows amount of data a bus can carry in one cycle",
    "details": "The data bus carries the actual data being transferred.",
    "tags": ["Processor"],
    "questions": [
      {"q": "Is the Data Bus uni-directional or bi-directional?", "a": "Bi-directional"},
      {"q": "What does the 'bus width' of a Data Bus indicate?", "a": "Amount of data a bus can carry in one cycle"},
      {"q": "What three things does the Data Bus carry?", "a": "instructions, data, addresses"}
    ]
  },
  {
    "term": "Address Bus",
    "definition": "Uni directional(One way), Used to carry ONLY addresses, Bus width is important and tells the number of addresses a Processor can access directly.",
    "details": "The address bus determines the maximum addressing capacity of the system.",
    "tags": ["Processor"],
    "questions": [
      {"q": "Is the Address Bus uni-directional or bi-directional?", "a": "Uni-directional"},
      {"q": "What does the Address Bus carry?", "a": "ONLY addresses"},
      {"q": "What does the width of the Address Bus determine?", "a": "The number of addresses a Processor can access directly"}
    ]
  },
  {
    "term": "Control Bus",
    "definition": "Bi directional Bus, Used to carry instructions to other components of the computer, Bi directional(Two ways), Also carries timing signals generated by the system clock",
    "details": "The control bus carries the control signals that manage the operations of the CPU and other components.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What bus carries timing signals from the system clock?", "a": "Control Bus"},
      {"q": "What bus carries instructions and signals to manage other components?", "a": "Control Bus"}
    ]
  },
  {
    "term": "MU",
    "definition": "Memory Unit, Stores data permanently in secondary storage execution, Fetches Data from RAM towards CPU, MDR and MAR are part of the memory unit",
    "details": "Works closely with the CU during the FDE cycle",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does MU stand for?", "a": "Memory Unit"},
      {"q": "What two registers are part of the Memory Unit?", "a": "MDR and MAR"}
    ]
  },
  {
    "term": "CU",
    "definition": "Control Unit, Decoding and execution of instructions, instruct other components what to do, maintain synchronization of instructions with the help of system clock, contains the PC and CIR",
    "details": "Coordinates the Fetch-Decode-Execute cycle.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does CU stand for?", "a": "Control Unit"},
      {"q": "What part of the processor decodes instructions and maintains synchronization?", "a": "Control Unit"},
      {"q": "What two registers does the CU contain?", "a": "PC and CIR"}
    ]
  },
  {
    "term": "ALU",
    "definition": "Arithmetic Logic Unit, Performs arithmetic and logic operations, + = * / AND OR NOT, Decision making is done and is the gateway to the Processor",
    "details": "Part of the CPU that handles calculations.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What does ALU stand for?", "a": "Arithmetic Logic Unit"},
      {"q": "What part of the processor performs calculations like AND, OR, NOT?", "a": "ALU"},
      {"q": "What part of the processor performs arithmetic operations like addition and subtraction?", "a": "ALU"}
    ]
  },
  {
    "term": "Interrupts",
    "definition": "Signals generated by software or hardware to stop the process of Processor for a certain period of time",
    "details": "Used for handling asynchronous events.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What is a signal generated by software or hardware to stop the processor temporarily?", "a": "Interrupt"}
    ]
  },
  {
    "term": "Software Interrupts",
    "definition": "Buffer is Full, Divide by Zero, Stack Overflow, User input required, Software Errors",
    "details": "Generated by programs when they need attention from the CPU.",
    "tags": ["Processor"],
    "questions": [
      {"q": "Give an example of a software interrupt.", "a": "Divide by Zero"}
    ]
  },
  {
    "term": "Hardware Interrupts",
    "definition": "Power Failure(Hieghest priority), Hardware Failure, Printer out of paper, User presses key on keyboard",
    "details": "Used for handling events like I/O operations.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What hardware interrupt typically has the highest priority?", "a": "Power Failure"},
      {"q": "Give an example of a hardware interrupt.", "a": "Printer out of paper"}
    ]
  },
  {
    "term": "Role of Interrupts in FDE cycle",
    "definition": "Checked at the end of cycle, Priority is checked, IF higher priority,1. Values in Current Registers are stored in stack(memory).2. Load interrupts in program countrer(PC) with the help of the Interrupt Service Ruitine(ISR).3.Interrupts are executed(PC -> MAR -> MDR -> CIR -> PC+1 -> Decode -> Execute(Either goes to ACC if result else (If no intterrupt previous instruction is restored to PC, If yes Execute interrupt after checking prriorty).4. Once interrupt is executed, previous values are restored from stack to registers.5. Resume FDE cycle from where it was interrupted.",
    "details": "Steps involved in handling interrupts during the Fetch-Decode-Execute cycle.",
    "tags": ["Processor"],
    "questions": [
      {"q": "When in the FDE cycle are interrupts checked?", "a": "At the end of the cycle"},
      {"q": "If an interrupt has a higher priority, where are the values from the current registers stored?", "a": "In the stack"},
      {"q": "What does ISR stand for?", "a": "Interrupt Service Routine"},
      {"q": "What register is loaded with the interrupt's address via the ISR?", "a": "Program Counter"}
    ]
  },
  {
    "term": "Register Transfer Notation",
    "definition": "Movement of data, instructions, address between registers. 1. MAR <- [PC] Contents of Program Counter is copied to MAR, 2. PC <- [PC]+1 Contents of PC is incremented and stored in PC, 3. MDR <- [[MAR]] MAR stores address, contents of this address are copied to MDR(Single bracket copy Data, Double Bracket Copies data stored in mentioned address), 4. CIR <- [MDR] Contents of MDR is copied to CIR",
    "details": "Notation used to describe data transfers between registers in a CPU.",
    "tags": ["Processor"],
    "questions": [
      {"q": "What notation is used to describe the movement of data between registers?", "a": "Register Transfer Notation"},
      {"q": "In RTN, what does 'MAR <- [PC]' mean?", "a": "Contents of Program Counter is copied to MAR"},
      {"q": "In RTN, what does 'PC <- [PC]+1' mean?", "a": "Contents of PC is incremented and stored in PC"},
      {"q": "In RTN, what do double brackets mean, as in 'MDR <- [[MAR]]'?", "a": "Copies data stored in the mentioned address"}
    ]
  },
    {
    "term": "Fetch–Decode–Execute Cycle (FDE Cycle)",
    "definition": "The continuous cycle used by the CPU to fetch instructions from memory, decode them, and execute them.",
    "details": "It involves multiple components: PC → MAR → MDR → CIR → PC+1 → Decode → Execute. If an interrupt occurs, the cycle handles it before continuing execution.",
    "order": "1. PC sends address to MAR → 2. MAR sends it via Address Bus → 3. Memory sends data to MDR → 4. MDR transfers instruction to CIR → 5. PC increments (PC+1) → 6. Decode → 7. Execute (result stored in ACC or next step).",
    "tags": ["Processor"],
    "questions": [
        {"q": "What does FDE stand for?", "a": "Fetch–Decode–Execute"},
        {"q": "What is the order of the FDE cycle?", "a": "PC → MAR → MDR → CIR → PC+1 → Decode → Execute"},
        {"q": "What register stores the address of the next instruction?", "a": "Program Counter (PC)"},
        {"q": "Which register holds the address of the memory location to be accessed?", "a": "Memory Address Register (MAR)"},
        {"q": "Which register stores the data fetched from memory?", "a": "Memory Data Register (MDR)"},
        {"q": "Which register holds the instruction currently being executed?", "a": "Current Instruction Register (CIR)"},
        {"q": "What happens after the instruction is fetched into the CIR?", "a": "It is decoded and then executed"},
        {"q": "Where is the result of execution often stored?", "a": "Accumulator (ACC)"},
        {"q": "What does the system clock do in the CPU?", "a": "It generates regular timing signals to synchronise operations"},
        {"q": "Is RAM part of the processor?", "a": "No"},
        {"q": "Which register in the ALU temporarily holds arithmetic and logic results?", "a": "Accumulator (ACC)"},
        {"q": "What does the ACC stand for?", "a": "Accumulator"},
        {"q": "What two registers belong to the Memory Unit?", "a": "MAR and MDR"},
        {"q": "What is the IAS?", "a": "Immediate Access Store – another name for main memory"},
        {"q": "What are the three types of buses in a CPU system?", "a": "Address Bus, Data Bus, Control Bus"},
        {"q": "Which bus is uni-directional and carries addresses from CPU to Memory?", "a": "Address Bus"},
        {"q": "Which bus is bi-directional and carries data both ways?", "a": "Data Bus"},
        {"q": "Which bus carries timing and control signals?", "a": "Control Bus"},
        {"q": "What direction do buses connect for the CPU?", "a": "Address Bus: Out; Data Bus: In/Out; Control Bus: In/Out"},
        {"q": "What direction do buses connect for the Memory Unit?", "a": "Address Bus: In; Data Bus: In/Out; Control Bus: In/Out"},
        {"q": "What direction do buses connect for I/O Devices?", "a": "Address Bus: In; Data Bus: In/Out; Control Bus: In/Out"}
    ]
    },
  {
    "term": "Lossy Sound File",
    "definition": "Reduces File size by removing frequencies outside the human hearing range ",
    "details": "mp3, etc",
    "tags": ["Files"],
    "questions": [
      {"q": "How do lossy sound files (like MP3) reduce file size?", "a": "By removing frequencies outside the human hearing range"}
    ]
  }
]
